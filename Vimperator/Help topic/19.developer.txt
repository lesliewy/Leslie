Developer information
ContentsWriting documentationHelp tagsWriting pluginsPlugin documentation

writing-docsdocumentationWriting documentation


    For every new feature, writing documentation is mandatory for the
    patch to be accepted. The docs are written in an XML dialect similar to
    XHTML, with a few tags specific to our documentation. For example:



<item>
    <tags><![CDATA[<F1> :help :h help]]></tags>
    <spec>:h<oa>elp</oa> <a>subject</a></spec>
    <spec><![CDATA[<F1>]]></spec>
    <description>
        <p>
            Open help window.
            The default section is shown unless <a>subject</a> is specified.
            If you need help for a specific topic, try <ex>:help overview</ex>.
        </p>
    </description>
</item>



    creates a new help section for the command :help and for
    the related key binding, <F1>. It also creates help tags
    for the command, its shortcuts, the key binding, and the general
    topic, 'help'. These tags enable linking to this section from
    other mentions of the topic and from the :help command.
    The above code displays as:



<F1>:help:hhelp:h[elp] {subject}<F1>
        
            Open help window.
            The default section is shown unless {subject} is specified.
            If you need help for a specific topic, try :help overview.
        
    



    If you don't know in which file/section you should put some
    documentation, ask on the mailing list or on
    #vimperator.


help-tagshelp-xmlHelp tags


    The following is a list of the more common XML tags used in help pages,
    along with their highlight groups.


LayoutpA paragraph (HelpParagraph)h1A first-level heading (HelpHead)h2A second-level heading (HelpSubhead)h3A third-level heading (HelpSubsubhead)codeA pre-formatted code block. (HelpCode)noteNote: A note paragraph. (HelpNote)warningWarning: A warning paragraph. (HelpWarning)
GenericlinkA generic link. (HelpLink)   @topicThe topic of the link. Either a help topic or a fully-qualified URI.emEmphasized text. (HelpEm)strA string, with its contents wrapped in quotes. (HelpString)logoVimperator's logo. (Logo)
ItemsitemA help entry (HelpItem)   tagsSee the 'Tagging' section (HelpTags)   specThe specification for this item, such as an example command-line. (HelpSpec)   typeFor options, the type of the option.
                            number, boolean, string, string, stringlist, or charlist.
                            (HelpType)
                           defaultFor options, the default value. (HelpDefault)   descriptionThe description of this help item. (HelpDescription)aRequired {argument}. (HelpArg)oaOptional [argument]. (HelpOptionalArg)
TaggingtagsSpace-separated list of strings to tag. Displayed right-aligned, and used for cross-linking. (HelpTags)@tagThe tag attribute. Applied to any element, generates a <tags> element with its value for its contents. (HelpTag)
LinkingoLink to an option. (HelpOpt)exLink to an ex command. (HelpEx)kLink to a key. (HelpKey)   @nameThe name attribute to <k>. When provided, <{value}> is prepended to
                            the element's contents, i.e., <k name="F1"/> becomes <F1>.
                        tLinks to an arbitrary help topic. (HelpTopic)
PluginspluginThe container tag used for describing a plugin.   @nameThe name of the plugin. Used as the plugin's help tag.   @versionThe plugin's version number.   @hrefThe plugin's home page.   @summaryA short description of the plugin, shown in its section head.projectThe project for which this plugin was intended.   @nameThe name of the project (i.e., vimperator)   @minVersionThe minimum version of the project for which this plugin is intended to work.   @maxVersionThe maximum version of the project for which this plugin is intended to work.authorThe plugin's author. May appear more than once.   @hrefThe author's home page.   @emailThe author's email address.licenseThe plugin's license. May appear more than once.   @hrefThe URI of a page which shows or explains the license.



writing-pluginsWriting plugins


    Writing Vimperator plugins is incredibly simple.
    Plugins are simply JavaScript files which run with full chrome
    privileges and have full access to the Vimperator and
    Firefox APIs. Each plugin has its own global object,
    which means that the variables and functions that you create
    won't pollute the global window or private
    liberator namespaces. This means that there's no need
    to wrap your plugin in a closure, as is often the practice in
    JavaScript development. Furthermore, any plugin which is
    installed in your 'runtimepath'/plugin directory
    will find its context stored in
    plugins.<pluginName>, which is often invaluable
    during development and testing.


plugin-documentationPlugin documentation


    Plugins may provide inline documentation, which will appear on
    the :help plugins page. The markup for help entries
    is the same as the above, with a few more plugin specific
    entries. Here is an example from the popular
    flashblock extension:



var INFO = 
<plugin name="flashblock" version="1.0"
        href="http://ticket.vimperator.org/9"
        summary="Flash Blocker"
        xmlns="http://vimperator.org/namespaces/liberator">
    <author email="maglione.k@gmail.com">Kris Maglione</author>
    <license href="http://opensource.org/licenses/mit-license.php">MIT</license>
    <project name="Vimperator" minVersion="2.0"/>
    <p>
        This plugin provides the same features as the ever popular FlashBlock
        Firefox addon. Flash animations are substituted with place holders which
        play the original animation when clicked. Additionally, this plugin provides
        options to control which sites can play animations without restrictions, and
        triggers to toggle the playing of animation on the current page.
	commandline from the data in a given form.
    </p>
    <item>
	<tags>'flashblock' 'fb'</tags>
	<spec>'flashblock' 'fb'</spec>
        <type>boolean</type>
        <default>true</default>
	<description>
            <p>
                Controls the blocking of flash animations. When true, place
                holders are substituted for flash animations on untrusted sites.
            </p>
	</description>
    </item>
    бн
</plugin>;




    The inline XML is made possible by
    E4X.
    It's important that the documentation be assigned to the
    INFO variable, or Vimperator will not be able
    to find it. The documentation that you provide behaves exactly
    as other Vimperator documentation, which means that
    the tags you provide are available via :help with
    full tag completion and cross-referencing support. Although
    documentation is not required, we strongly recommend that all
    plugin authors provide at least basic documentation of the
    functionality of their plugins and of each of the options,
    commands, and especially mappings that they provide.