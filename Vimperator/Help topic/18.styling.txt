Styling the GUI and web pages
Contents


    Vimperator allows you to style both the browser and any web pages you view. All
    styling is specified via CSS. Although you may style any user interface element
    via the :style command, most Vimperator elements can be styled with the
    :highlight command, for convenience.


:colo:colorscheme:colo[rscheme] {name}
        
            Load a color scheme. {name} is found by searching the 'runtimepath' for the
            first file matching colors/{name}.vimp.
        

        
            The ColorScheme autocommand is triggered after the color scheme has been
            sourced.
        
    


:hi:highlight:hi[ghlight][!] [-append] {group} [[{selector}] {css}]
        
            Highlight {group} with {css}. {css} is one or more comma separated CSS
            declarations (E.g. color: blue; background-color: red). Normally, {css} is
            checked for valid syntax before it's applied. Once you're certain it's valid,
            [!] can be used to skip the check to speed up Vimperator startup. {selector}
            can be any valid CSS selector, such as :hover, and, if provided, will
            restrict the match to matching elements.
        

        Valid groups are:

        BellVimperator's visual bellBooleanA JavaScript Boolean objectCmdLineThe command lineCmdOutputCompDescThe description column of the completion listCompGroupCompIconThe favicon of a completion rowCompItemA row of completion listCompItem[selected]A selected row of completion listCompMsgCompResultThe result column of the completion listCompTitleCompletion row titlesErrorMsgError messagesFilterThe matching text in a completion listFrameIndicatorThe indicator shown when a new frame is selectedFunctionA JavaScript Function objectHintA hint indicator. See :help hintsHintActiveThe hint element of link which will be followed by <Return>HintElemThe hintable elementHintImageThe indicator which floats above hinted imagesIndicatorInfoMsgInformation messagesKeywordA bookmark keyword for a URLLineNrThe line number of an errorMessageModeMsgThe mode indicator in the command lineMoreMsgThe indicator that there is more text to viewNonTextNormalNormal text in the command lineNullA JavaScript Null objectNumberA JavaScript Number objectObjectA JavaScript ObjectPreviewQuestionA prompt for a decisionSearchHighlighted search results in a web pageStatusLineThe status barStringA JavaScript String objectTabCloseThe close button of a browser tabTabIconThe icon of a browser tabTabIconNumberThe number of a browser tab, over its iconTabNumberThe number of a browser tab, next to its iconTabTextThe text of a browser tabTagA bookmark tag for a URLTitleThe title of a listing, including :pageinfo, :jumpsURLA URLWarningMsgA warning message

        
            Every invocation completely replaces the styling of any previous invocation,
            unless -append (short option: -a) is provided, in which case {css} is
            appended to its current value. If {css} is not provided, any styles matching
            {group} are listed, or all styles if no {group} provided.
        
    


:highlight-clear:hi[ghlight] clear [{group} [{selector}]]
        
            Reset the highlighting for {group} to its default value. If
            {group} is not given, reset all highlighting groups.
        
    


:sty:style:sty[le][!] [-name={name}] [-append] {filter} [{css}]
        
            Add CSS styles to the browser or to web pages. {filter} is a comma separated
            list of URLs to match. URLs ending with * are matched as prefixes, URLs not
            containing any : or / characters are matched as domains. {css} is a full
            CSS rule set (e.g., body { color: blue; }).
        

        
            If {name} (short option: -n) is provided, any existing style with the same
            name is overridden, and the style may later be deleted using {name}. If
            -append (short option: -a) is provided along with -name, {css} and
            {filter} are appended to its current value.
        

        If {css} isn't provided, matching styles are listed.
    


:dels:delstyle:dels[tyle] [-name={name}] [-index={index}] [{filter}] [{css}]
        
            Delete any matching styles. If {filter} is provided, only matching elements of
            the filter are disabled. For instance, a filter mozilla.org, given a
            style for www.google.com,mozilla.org, will result in a style for
            www.google.com. The available options are:
        

        
            -name:  The name provided to :style (short option: -n)
            -index: For unnamed styles, the index listed by :style
                (short option: -i)
        
    


:styleenable:stylee:styenable:stye:styled[isable] [-name={name}] [-index={index}] {filter} {css}
        Enable any matching styles. Arguments are the same as for :delstyle.
    


:styledisable:styled:stydisable:styd:stylee[nable] [-name={name}] [-index={index}] {filter} {css}
        Disable any matching styles. Arguments are the same as for :delstyle.
    


:styletoggle:stylet:stytoggle:styt:stylet[oggle] [-name={name}] [-index={index}] {filter} {css}
        Toggle any matching styles. Arguments are the same as for :delstyle.